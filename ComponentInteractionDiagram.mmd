graph TD
    %% User Layer
    subgraph "👤 User Layer"
        User[User/Client Application]
    end
    
    %% External Interface Layer
    subgraph "🌐 External Interface Layer"
        LB[Load Balancer<br/>Nginx/AWS ALB]
        CDN[CDN<br/>CloudFront]
    end
    
    %% API Gateway Layer
    subgraph "🚪 API Gateway Layer"
        Gateway[API Gateway<br/>Kong/AWS Gateway]
        Auth[Auth Service<br/>OAuth 2.0/JWT]
        RateLimit[Rate Limiter<br/>Redis-based]
    end
    
    %% Application Services Layer
    subgraph "⚙️ Application Services Layer"
        ValidSvc[Validation Service<br/>Node.js/Spring Boot]
        SecuritySvc[Security Service<br/>Microservice]
        NotificationSvc[Notification Service<br/>Email/SMS]
    end
    
    %% Business Logic Layer
    subgraph "🧠 Business Logic Layer"
        URLValidator[URL Format Validator<br/>Regex Engine]
        AccessChecker[Accessibility Checker<br/>HTTP Client]
        SecurityScanner[Security Scanner<br/>ML/Rules Engine]
        AuditManager[Audit Manager<br/>Event Logger]
    end
    
    %% Data Access Layer
    subgraph "💾 Data Access Layer"
        CacheManager[Cache Manager<br/>Redis Client]
        DBManager[Database Manager<br/>PostgreSQL Client]
        ExternalAPIManager[External API Manager<br/>HTTP Client Pool]
    end
    
    %% Infrastructure Layer
    subgraph "🏗️ Infrastructure Layer"
        RedisCache[(Redis Cache<br/>In-Memory Store)]
        PostgresDB[(PostgreSQL<br/>Primary Database)]
        AuditStore[(Elasticsearch<br/>Audit Logs)]
        ExternalAPIs[External APIs<br/>VirusTotal, DNS]
    end
    
    %% Monitoring & Observability Layer
    subgraph "📊 Monitoring Layer"
        MetricsCollector[Metrics Collector<br/>Prometheus]
        LogAggregator[Log Aggregator<br/>ELK Stack]
        AlertManager[Alert Manager<br/>PagerDuty]
        HealthChecker[Health Checker<br/>Custom Service]
    end
    
    %% Step 1: Receive URL Input - Component Interactions
    User -->|1.1 HTTP Request| LB
    User -->|1.2 Static Assets| CDN
    LB -->|1.3 Route Request| Gateway
    Gateway -->|1.4 Authenticate| Auth
    Auth -->|1.5 Validate Token| RedisCache
    Gateway -->|1.6 Check Rate Limit| RateLimit
    RateLimit -->|1.7 Rate Check| RedisCache
    Gateway -->|1.8 Forward Request| ValidSvc
    
    %% Step 2: Format Validation - Component Interactions
    ValidSvc -->|2.1 Check Cache| CacheManager
    CacheManager -->|2.2 Cache Lookup| RedisCache
    ValidSvc -->|2.3 Validate Format| URLValidator
    URLValidator -->|2.4 Regex Check| URLValidator
    ValidSvc -->|2.5 Store Result| CacheManager
    CacheManager -->|2.6 Cache Store| RedisCache
    
    %% Step 3: Accessibility Check - Component Interactions
    ValidSvc -->|3.1 Check Access| AccessChecker
    AccessChecker -->|3.2 HTTP Request| ExternalAPIManager
    ExternalAPIManager -->|3.3 External Call| ExternalAPIs
    ExternalAPIs -->|3.4 Response| ExternalAPIManager
    ExternalAPIManager -->|3.5 Result| AccessChecker
    AccessChecker -->|3.6 Cache Result| CacheManager
    
    %% Step 4: Security Screening - Component Interactions
    ValidSvc -->|4.1 Security Check| SecuritySvc
    SecuritySvc -->|4.2 Scan URL| SecurityScanner
    SecurityScanner -->|4.3 Check Blacklist| DBManager
    DBManager -->|4.4 Query DB| PostgresDB
    SecurityScanner -->|4.5 External Scan| ExternalAPIManager
    ExternalAPIManager -->|4.6 Malware Check| ExternalAPIs
    SecuritySvc -->|4.7 Store Threat Data| DBManager
    
    %% Cross-cutting Concerns - Monitoring Interactions
    ValidSvc -.->|Metrics| MetricsCollector
    SecuritySvc -.->|Metrics| MetricsCollector
    Gateway -.->|Access Logs| LogAggregator
    Auth -.->|Auth Events| AuditManager
    AuditManager -.->|Audit Trail| AuditStore
    
    %% Health Check Interactions
    HealthChecker -.->|Health Check| ValidSvc
    HealthChecker -.->|Health Check| SecuritySvc
    HealthChecker -.->|Health Check| RedisCache
    HealthChecker -.->|Health Check| PostgresDB
    
    %% Alert Interactions
    MetricsCollector -.->|Performance Alerts| AlertManager
    SecurityScanner -.->|Security Alerts| AlertManager
    HealthChecker -.->|Availability Alerts| AlertManager
    
    %% Notification Interactions
    SecuritySvc -->|5.1 Threat Detected| NotificationSvc
    ValidSvc -->|5.2 Validation Complete| NotificationSvc
    NotificationSvc -->|5.3 Send Alert| ExternalAPIs
    
    %% Response Flow
    ValidSvc -->|6.1 Response| Gateway
    Gateway -->|6.2 Log Response| LogAggregator
    Gateway -->|6.3 Return Result| LB
    LB -->|6.4 Final Response| User
    
    %% Error Handling Interactions
    subgraph "🚨 Error Handling"
        CircuitBreaker[Circuit Breaker<br/>Hystrix/Resilience4j]
        RetryManager[Retry Manager<br/>Exponential Backoff]
        ErrorHandler[Error Handler<br/>Global Exception Handler]
    end
    
    ExternalAPIManager -->|Failure| CircuitBreaker
    CircuitBreaker -->|Fallback| RetryManager
    RetryManager -->|Max Retries| ErrorHandler
    ErrorHandler -->|Error Response| Gateway
    
    %% Styling for different component types
    
    class User user
    class LB,CDN interface
    class Gateway,Auth,RateLimit gateway
    class ValidSvc,SecuritySvc,NotificationSvc service
    class URLValidator,AccessChecker,SecurityScanner,AuditManager logic
    class CacheManager,DBManager,ExternalAPIManager data
    class RedisCache,PostgresDB,AuditStore,ExternalAPIs infrastructure
    class MetricsCollector,LogAggregator,AlertManager,HealthChecker monitoring
    class CircuitBreaker,RetryManager,ErrorHandler error
